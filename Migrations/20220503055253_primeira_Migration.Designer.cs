// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using testedev.Data;

namespace testedev.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220503055253_primeira_Migration")]
    partial class primeira_Migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("testedev.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NmCategoria")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NmCategoria = "Importação"
                        },
                        new
                        {
                            Id = 2,
                            NmCategoria = "Exportação"
                        });
                });

            modelBuilder.Entity("testedev.Models.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NmCliente")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NmCliente = "João Pablo"
                        },
                        new
                        {
                            Id = 2,
                            NmCliente = "Maria Cardoso"
                        },
                        new
                        {
                            Id = 3,
                            NmCliente = "Adalberto Penna"
                        });
                });

            modelBuilder.Entity("testedev.Models.Conteiner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConteinerNumero")
                        .HasColumnType("TEXT");

                    b.Property<byte>("ConteinerTipo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatusId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("StatusId");

                    b.ToTable("Conteiners");
                });

            modelBuilder.Entity("testedev.Models.Movimentacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConteinerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataHoraFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataHoraInicio")
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoMovimentacaoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ConteinerId");

                    b.HasIndex("TipoMovimentacaoId");

                    b.ToTable("Movimentacoes");
                });

            modelBuilder.Entity("testedev.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NmStatus")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NmStatus = "Vazio"
                        },
                        new
                        {
                            Id = 2,
                            NmStatus = "Cheio"
                        });
                });

            modelBuilder.Entity("testedev.Models.TipoMovimentacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NmTipoMovimentacao")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TipoMovimentacao");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NmTipoMovimentacao = "Embarque"
                        },
                        new
                        {
                            Id = 2,
                            NmTipoMovimentacao = "Descarga"
                        },
                        new
                        {
                            Id = 3,
                            NmTipoMovimentacao = "Gate In"
                        },
                        new
                        {
                            Id = 4,
                            NmTipoMovimentacao = "Gate Out"
                        },
                        new
                        {
                            Id = 5,
                            NmTipoMovimentacao = "Reposicionamento"
                        },
                        new
                        {
                            Id = 6,
                            NmTipoMovimentacao = "Pesagem"
                        },
                        new
                        {
                            Id = 7,
                            NmTipoMovimentacao = "Scanner"
                        });
                });

            modelBuilder.Entity("testedev.Models.Conteiner", b =>
                {
                    b.HasOne("testedev.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("testedev.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("testedev.Models.Movimentacao", b =>
                {
                    b.HasOne("testedev.Models.Clientes", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("testedev.Models.Conteiner", "Conteiner")
                        .WithMany()
                        .HasForeignKey("ConteinerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("testedev.Models.TipoMovimentacao", "TipoMovimentacao")
                        .WithMany()
                        .HasForeignKey("TipoMovimentacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Conteiner");

                    b.Navigation("TipoMovimentacao");
                });
#pragma warning restore 612, 618
        }
    }
}
